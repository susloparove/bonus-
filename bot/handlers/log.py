# bot/handlers/log.py

from telebot import TeleBot
from bot.handlers.auth import AUTHORIZED_USERS
from server.users import get_user_role
import os
import json

LOG_PATH = os.path.join(os.path.dirname(os.path.dirname(os.path.dirname(__file__))), "logs", "actions.json")


def register_log_handlers(tbot: TeleBot):
    @tbot.message_handler(func=lambda msg: msg.text == "üìÑ –ñ—É—Ä–Ω–∞–ª –¥–µ–π—Å—Ç–≤–∏–π")
    def handle_show_log(message):
        chat_id = message.chat.id
        username = AUTHORIZED_USERS.get(chat_id)

        if not username or get_user_role(username) != "admin":
            tbot.send_message(chat_id, "‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –ª–æ–≥.")
            return

        if not os.path.exists(LOG_PATH):
            tbot.send_message(chat_id, "üì≠ –ñ—É—Ä–Ω–∞–ª –ø—É—Å—Ç.")
            return

        try:
            with open(LOG_PATH, "r", encoding="utf-8") as f:
                logs = json.load(f)

            if not logs:
                tbot.send_message(chat_id, "üì≠ –ñ—É—Ä–Ω–∞–ª –ø—É—Å—Ç.")
                return

            # –ü–æ–∫–∞–∂–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∑–∞–ø–∏—Å–µ–π
            last_logs = logs[-10:]
            text = "<b>üìÑ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:</b>\n\n"
            for entry in last_logs:
                text += (
                    f"üïí {entry['timestamp']}\n"
                    f"üë§ {entry['user']} ‚Äî {entry['action']}\n"
                    f"üì± –ö–ª–∏–µ–Ω—Ç: {entry['target']}, üí∞ {entry['amount'] or '-'}‚ÇΩ\n\n"
                )

            tbot.send_message(chat_id, text.strip(), parse_mode="HTML")
        except Exception as e:
            tbot.send_message(chat_id, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –ª–æ–≥–∞: {e}")
