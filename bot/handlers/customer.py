from telebot import TeleBot, types
from bot.utils import validate_birth_date
from .auth import user_data, clients


def register_customer_handlers(tbot: TeleBot):
    @tbot.message_handler(commands=['add'])
    def handle_add_customer(message: types.Message):
        tbot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∫–ª–∏–µ–Ω—Ç–∞:")
        tbot.register_next_step_handler(message, lambda m: process_name(m, tbot))

    def process_name(message: types.Message, tbot: TeleBot):
        user_data[message.chat.id] = {'name': message.text}
        tbot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
        tbot.register_next_step_handler(message, lambda m: process_phone(m, tbot))

    def process_phone(message: types.Message, tbot: TeleBot):
        user_data[message.chat.id]['phone'] = message.text
        tbot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è (–¥–¥.–º–º.–≥–≥–≥–≥):")
        tbot.register_next_step_handler(message, lambda m: process_birth_date(m, tbot))

    def process_birth_date(message: types.Message, tbot: TeleBot):
        birth_date = message.text
        if not validate_birth_date(birth_date):
            tbot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:")
            tbot.register_next_step_handler(message, lambda m: process_birth_date(m, tbot))
            return

        user_data[message.chat.id]['birth_date'] = birth_date
        user_data[message.chat.id]['balance'] = 0.0
        clients.append(user_data[message.chat.id])
        tbot.send_message(message.chat.id, "–ö–ª–∏–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω ‚úÖ")

    @tbot.message_handler(commands=['list'])
    def handle_list_customers(message: types.Message):
        if not clients:
            tbot.send_message(message.chat.id, "–°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø—É—Å—Ç.")
            return

        response = ""
        for c in clients:
            response += f"üë§ {c['name']} | üìû {c['phone']} | üí∞ {c['balance']}‚ÇΩ\n"
        tbot.send_message(message.chat.id, response)

    @tbot.message_handler(commands=['find'])
    def handle_find_customer(message: types.Message):
        tbot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞:")
        tbot.register_next_step_handler(message, lambda m: process_find_customer(m, tbot))

    def process_find_customer(message: types.Message, tbot: TeleBot):
        phone = message.text.strip()
        found = next((c for c in clients if c['phone'] == phone), None)

        if found:
            msg = (f"üë§ –ò–º—è: {found['name']}\n"
                   f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {found['phone']}\n"
                   f"üéÇ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {found['birth_date']}\n"
                   f"üí∞ –ë–∞–ª–∞–Ω—Å: {found['balance']}‚ÇΩ")
        else:
            msg = "–ö–ª–∏–µ–Ω—Ç —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω ‚ùå"
        tbot.send_message(message.chat.id, msg)
